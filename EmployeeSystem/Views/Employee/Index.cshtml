@model PagedList.IPagedList<EmployeeSystem.Models.Employee>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />


@{
    ViewBag.Title = "Employees";
}

<h2>Employee</h2>
<br />

<p>
    <a href='@Url.Action("Create", "Employee")'>
        <input type='button' value='Create New' class="btn btn-primary" />
    </a>
</p>
<br />
@using (Html.BeginForm("Index", "Employee", FormMethod.Get))
{
    <p>
        Find by name: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
        <input type="submit" value="Search" />
    </p>
}
<br />
<table class="table">
    <tr>
        <th>
            @Html.ActionLink("Last Name", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            First Name
        </th>
        <th>
            @Html.ActionLink("Hire Date", "Index", new { sortOrder = ViewBag.DateSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th></th>
    </tr>


    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.HireDate)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.ID }, new { @class = "btn btn-info", onclick = "return confirm('Confirm edit?')" })
                @Html.ActionLink("Details", "Details", new { id = item.ID }, new { @class = "btn btn-primary" })
                @Html.ActionLink("Delete", "Delete", new { id = item.ID }, new { @class = "btn btn-danger", onclick = "return confirm('Are you sure you want to delete?');" })
            </td>
        </tr>
    }

</table>
<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))